{"remainingRequest":"C:\\Users\\vishn_000\\Desktop\\Simac\\poc-with-vue.js\\POC Temp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\vishn_000\\Desktop\\Simac\\poc-with-vue.js\\POC Temp\\src\\components\\NotificationPlugin\\Notification.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\vishn_000\\Desktop\\Simac\\poc-with-vue.js\\POC Temp\\src\\components\\NotificationPlugin\\Notification.vue","mtime":1559029344395},{"path":"C:\\Users\\vishn_000\\Desktop\\Simac\\poc-with-vue.js\\POC Temp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vishn_000\\Desktop\\Simac\\poc-with-vue.js\\POC Temp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\vishn_000\\Desktop\\Simac\\poc-with-vue.js\\POC Temp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\vishn_000\\Desktop\\Simac\\poc-with-vue.js\\POC Temp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"notification\",\r\n  props: {\r\n    message: String,\r\n    icon: String,\r\n    verticalAlign: {\r\n      type: String,\r\n      default: \"top\"\r\n    },\r\n    horizontalAlign: {\r\n      type: String,\r\n      default: \"center\"\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"info\"\r\n    },\r\n    timeout: {\r\n      type: Number,\r\n      default: 2500\r\n    },\r\n    timestamp: {\r\n      type: Date,\r\n      default: () => new Date()\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      elmHeight: 0\r\n    };\r\n  },\r\n  computed: {\r\n    hasIcon() {\r\n      return this.icon && this.icon.length > 0;\r\n    },\r\n    alertType() {\r\n      return `alert-${this.type}`;\r\n    },\r\n    customPosition() {\r\n      let initialMargin = 20;\r\n      let alertHeight = this.elmHeight + 10;\r\n      let sameAlertsCount = this.$notifications.state.filter(alert => {\r\n        return (\r\n          alert.horizontalAlign === this.horizontalAlign &&\r\n          alert.verticalAlign === this.verticalAlign &&\r\n          alert.timestamp <= this.timestamp\r\n        );\r\n      }).length;\r\n      let pixels = (sameAlertsCount - 1) * alertHeight + initialMargin;\r\n      let styles = {};\r\n      if (this.verticalAlign === \"top\") {\r\n        styles.top = `${pixels}px`;\r\n      } else {\r\n        styles.bottom = `${pixels}px`;\r\n      }\r\n      return styles;\r\n    }\r\n  },\r\n  methods: {\r\n    close() {\r\n      this.$emit(\"on-close\", this.timestamp);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.elmHeight = this.$el.clientHeight;\r\n    if (this.timeout) {\r\n      setTimeout(this.close, this.timeout);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Notification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Notification.vue","sourceRoot":"src/components/NotificationPlugin","sourcesContent":["<template>\r\n  <div\r\n    @click=\"close()\"\r\n    data-notify=\"container\"\r\n    class=\"alert open alert-with-icon\"\r\n    role=\"alert\"\r\n    :class=\"[verticalAlign, horizontalAlign, alertType]\"\r\n    :style=\"customPosition\"\r\n    data-notify-position=\"top-center\"\r\n  >\r\n    <button\r\n      type=\"button\"\r\n      aria-hidden=\"true\"\r\n      class=\"close\"\r\n      data-notify=\"dismiss\"\r\n      @click=\"close\"\r\n    >\r\n      Ã—\r\n    </button>\r\n    <i data-notify=\"icon\" class=\"material-icons\">{{ icon }}</i>\r\n    <span data-notify=\"message\" v-html=\"message\"></span>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"notification\",\r\n  props: {\r\n    message: String,\r\n    icon: String,\r\n    verticalAlign: {\r\n      type: String,\r\n      default: \"top\"\r\n    },\r\n    horizontalAlign: {\r\n      type: String,\r\n      default: \"center\"\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"info\"\r\n    },\r\n    timeout: {\r\n      type: Number,\r\n      default: 2500\r\n    },\r\n    timestamp: {\r\n      type: Date,\r\n      default: () => new Date()\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      elmHeight: 0\r\n    };\r\n  },\r\n  computed: {\r\n    hasIcon() {\r\n      return this.icon && this.icon.length > 0;\r\n    },\r\n    alertType() {\r\n      return `alert-${this.type}`;\r\n    },\r\n    customPosition() {\r\n      let initialMargin = 20;\r\n      let alertHeight = this.elmHeight + 10;\r\n      let sameAlertsCount = this.$notifications.state.filter(alert => {\r\n        return (\r\n          alert.horizontalAlign === this.horizontalAlign &&\r\n          alert.verticalAlign === this.verticalAlign &&\r\n          alert.timestamp <= this.timestamp\r\n        );\r\n      }).length;\r\n      let pixels = (sameAlertsCount - 1) * alertHeight + initialMargin;\r\n      let styles = {};\r\n      if (this.verticalAlign === \"top\") {\r\n        styles.top = `${pixels}px`;\r\n      } else {\r\n        styles.bottom = `${pixels}px`;\r\n      }\r\n      return styles;\r\n    }\r\n  },\r\n  methods: {\r\n    close() {\r\n      this.$emit(\"on-close\", this.timestamp);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.elmHeight = this.$el.clientHeight;\r\n    if (this.timeout) {\r\n      setTimeout(this.close, this.timeout);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@media screen and (max-width: 991px) {\r\n  .alert {\r\n    width: auto !important;\r\n    margin: 0 10px;\r\n\r\n    &.left {\r\n      left: 0 !important;\r\n    }\r\n    &.right {\r\n      right: 0 !important;\r\n    }\r\n    &.center {\r\n      margin: 0 10px !important;\r\n    }\r\n  }\r\n}\r\n\r\n.alert {\r\n  z-index: 100;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  width: 41%;\r\n\r\n  &.center {\r\n    left: 0;\r\n    right: 0;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin: 0 auto;\r\n  }\r\n  &.left {\r\n    left: 20px;\r\n  }\r\n  &.right {\r\n    right: 20px;\r\n  }\r\n}\r\n</style>\r\n"]}]}